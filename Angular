********Instalación Angular************
Angular es un framework de trabajo
1. Tener instalado node y tambien npm
2. ejecutar $>npm install -g @angular/cli -> Instalará la última versión de angular
3. $>ng version -> Muestra la versión de angular que se instaló.
4. $>npm list -g @angular/cli -> Verificamos las versiónes instaladas
**********Verificar que este configurado las variables de entorno.*********
5. En variables del sistema, buscar la variable PATH y agregar C:\Users\Pvargas\AppData\Roaming\npm aceptar y guardar.
6. $>npm uninstall -g @angular/cli  -> Desinstala en angular
7. $npm cache clean --force -> Limpiar cache para evitar conflictos con versiones antiguas
**********Instalar una versión específica********
8. $>npm install -g @angular/cli@16.2.16
**********Crear un proyecto**********
9. $>ng new my-app -> Si no reconoce el comando se puede anteponer (npx)
**********Crear Módulos***********
10. $>ng generate module moduloName -> si solo ng no funciona anteponer (npx)
10.1. $>ng g m  moduleName -> si solo ng no funciona anteponer (npx)
**********Crear compnentes******
11. $>ng generate component componentName -> si solo ng no funciona anteponer (npx)
11.1. $>ng g c compnentName
*********Inicializar un proyecto***************
12. npm start -> Debemos estar situados dentro del proyecto.


**************Conceptos******************
MODULOS: Es un mecanismo de organización y encapsulación que se usa para agrupar componentes, directivas, pipes.
Los módulos ayudab a dividir una aplicación en partes mas pequeñas y manejables, lo que facilita el desarrollo, la mantenibilidad y escalabilidad.
  Unidades organizativas.
  Encapsulan funcionalidads.
  Dividen la aplicación.
  Importan/exportan elementos.
  Registran proveedores.
  Evitan conflictos de nombres.
COMPONENTES: Es fundamental para la creación de interfaces de usuario(UI). Son responsable de definir como se vé y se comporta una parte
específica de la interfaz de usuario de la aplicación
Cada componete representa un elemento visual o funcional de una página web(Ej. header, footer, form, ul, etxc.).
Los componentes son unidades funcionales que se ven y se reutilizan.
Los componentes están compuestos de cuatro archivos
  1.El componente(nombreDelComponente.ts)
  2.El HTML de la plantilla(nombreDelComponente.html)
  3.El CSS de estillos(nombreDelComponente.css)
  4.El test, archivo de prueba(nombreDelComponente.spec.ts)

  Bloques de UI.
  Definen vistas y lógica.
  Usan clases TypeScript.
  Tienen plantillas HTML.
  Son reactivos.
  Altamente reutilizables.
  Se encapsulan.
  Jerarquia de la UI.
ENLACES DE DATOS: Es la capacidad de conectar y sincronizar los datos entre modelo y la vista.
Es una caracteristica fundamental que permite que los cambios del modelo se reflejen en la vista y viceversa de manera automática.
  Conexión Automática: Sincroniza datos entre modelo y vista.
  Unidireccional: Los cambios del modelo se reflejan en la vista.
  Bidireccional: Los cambios en la vista actualizan el modelo.
  Reactivo: Usa observables para actualizar en tiempo real.
  Simplifica Interacción: Facilita la reacción de aplicaciones interactivas.
  Automatiza Actualizaciones: Cambios se reflejan sin intervención manual.
